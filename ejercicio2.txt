CREATE TABLE sucursal(
cods VARCHAR2(500) PRIMARY KEY,
nrosucdependientes NUMBER(1) NOT NULL CHECK (nrosucdependientes BETWEEN 0 AND 9)
);

CREATE OR REPLACE TRIGGER control_insercion
FOR INSERT ON sucursal
COMPOUND TRIGGER

TYPE inserciones_sucursal IS TABLE OF sucursal%ROWTYPE INDEX BY SIMPLE_INTEGER;
instancia_inserciones_sucursal inserciones_sucursal;
indice SIMPLE_INTEGER := 0;

BEFORE EACH ROW IS
BEGIN
 FOR indice_sucursal IN 1 .. :NEW.nrosucdependientes
 LOOP
  indice := indice + 1;
  instancia_inserciones_sucursal(indice).cods := :NEW.cods || '.' || indice_sucursal;
  instancia_inserciones_sucursal(indice).nrosucdependientes := 0;
 END LOOP;
END BEFORE EACH ROW;

 AFTER STATEMENT IS
 BEGIN
  FORALL indice_tabla IN 1..instancia_inserciones_sucursal.count()
   INSERT INTO sucursal VALUES instancia_inserciones_sucursal(indice_tabla);
 END AFTER STATEMENT;

END control_insercion;
/

CREATE OR REPLACE TRIGGER control_actualizado
FOR UPDATE ON sucursal
COMPOUND TRIGGER

TYPE inserciones_sucursal IS TABLE OF sucursal%ROWTYPE INDEX BY SIMPLE_INTEGER;

instancia_inserciones_sucursal inserciones_sucursal;
instancia_borrados_sucursal inserciones_sucursal;

indice_inserciones_sucursal SIMPLE_INTEGER := 0;
indice_borrados_sucursal SIMPLE_INTEGER := 0;

BEFORE EACH ROW IS

BEGIN

 IF :OLD.nrosucdependientes > :NEW.nrosucdependientes THEN
  indice_borrados_sucursal := indice_borrados_sucursal + 1;
  instancia_borrados_sucursal(indice_borrados_sucursal).cods := :OLD.cods;
  instancia_borrados_sucursal(indice_borrados_sucursal).nrosucdependientes := :NEW.nrosucdependientes;

 ELSIF :OLD.nrosucdependientes < :NEW.nrosucdependientes THEN
  FOR indice_sucursal IN :OLD.nrosucdependientes + 1 .. :NEW.nrosucdependientes
  LOOP
   indice_inserciones_sucursal := indice_inserciones_sucursal + 1;
   instancia_inserciones_sucursal(indice_inserciones_sucursal).cods := :OLD.cods || '.' || indice_sucursal;
   instancia_inserciones_sucursal(indice_inserciones_sucursal).nrosucdependientes := 0;
  END LOOP;
 END IF;

END BEFORE EACH ROW;

 AFTER STATEMENT IS
 BEGIN

  FORALL indice_borrado IN 1..instancia_borrados_sucursal.count()
   DELETE FROM sucursal
   WHERE cods LIKE instancia_borrados_sucursal(indice_borrado).cods || '.%'
   AND cods >= instancia_borrados_sucursal(indice_borrado).cods || '.' || (instancia_borrados_sucursal(indice_borrado).nrosucdependientes + 1);

  FORALL indice_actualizado IN 1..instancia_inserciones_sucursal.count()
   INSERT INTO sucursal VALUES instancia_inserciones_sucursal(indice_actualizado);

 END AFTER STATEMENT;

END control_actualizado;
/
